"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const authenticate_middleware_1 = __importDefault(require("../../../helpers/middleware/authenticate.middleware"));
const validation_middleware_1 = require("../../../helpers/middleware/validation.middleware");
const roles_controller_1 = __importDefault(require("../controllers/roles.controller"));
const roles_schema_1 = require("../db/schemas/roles.schema");
const util_1 = require("../../../helpers/util");
const modules_codes_1 = require("../enums/modules-codes");
const privileges_1 = require("../enums/privileges");
const role_validation_middleware_1 = require("../../../helpers/middleware/role-validation.middleware");
const id_schema_1 = require("../../../helpers/db/schemas/id.schema");
const roleRouter = express_1.default.Router();
roleRouter.post('/', (0, validation_middleware_1.validateBody)(roles_schema_1.RoleCreateSchema), authenticate_middleware_1.default, (0, role_validation_middleware_1.roleValidation)((0, util_1.generateAuthKeyPair)(modules_codes_1.ModuleCode.USER_ACCOUNT, privileges_1.Privilege.CREATE)), roles_controller_1.default.save);
roleRouter.put('/:id', (0, validation_middleware_1.validateParameters)(id_schema_1.idSchema), (0, validation_middleware_1.validateBody)(roles_schema_1.RoleUpdateSchema), authenticate_middleware_1.default, (0, role_validation_middleware_1.roleValidation)((0, util_1.generateAuthKeyPair)(modules_codes_1.ModuleCode.USER_ACCOUNT, privileges_1.Privilege.UPDATE)), roles_controller_1.default.update);
roleRouter.get('/:id', (0, validation_middleware_1.validateParameters)(id_schema_1.idSchema), authenticate_middleware_1.default, (0, role_validation_middleware_1.roleValidation)((0, util_1.generateAuthKeyPair)(modules_codes_1.ModuleCode.USER_ACCOUNT, privileges_1.Privilege.ACCESS)), roles_controller_1.default.findOne);
roleRouter.get('/', authenticate_middleware_1.default, roles_controller_1.default.findAll);
exports.default = roleRouter;
