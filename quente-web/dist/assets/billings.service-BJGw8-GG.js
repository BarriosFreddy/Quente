import p from"./DatabaseService-IbC6Bkt9.js";import{d as w}from"./dayjs.min-Bvy1Uf3G.js";import{S as b,L as E,Q as h,T as A,U as g}from"./index-zLCb2fgV.js";import{r as T}from"./DefaultLayout-Dp8_4Mli.js";const O=-5;class k{#t="billings";constructor(t){this.db=t}async save(t){await this.db.save(this.#t,t)}async find({page:t=1,size:n=10}){return this.db.find(this.#t,{page:t,size:n})}async findWithFilters({page:t=1,limit:n=10,fromDate:c=null,toDate:r=null,status:a=null,minAmount:i=null,maxAmount:s=null,code:e=null}={}){const f=(await this.db.getCollection(this.#t).toArray()).filter(d=>{let o=!0;if(c){const y=w(c).startOf("day").utcOffset(O).valueOf();o=o&&d.createdAt?.date>=y}if(r){const y=w(r).endOf("day").utcOffset(O).valueOf();o=o&&d.createdAt?.date<=y}return a&&(o=o&&d.status===a),i!==null&&(o=o&&d.total>=i),s!==null&&(o=o&&d.total<=s),e&&(o=o&&d.code&&d.code.toLowerCase().includes(e.toLowerCase())),o});f.sort((d,o)=>{const y=d.createdAt?.date||0;return(o.createdAt?.date||0)-y});const S=(t-1)*n,B=S+n;return{data:f.slice(S,B),page:t,totalPages:Math.ceil(f.length/n),total:f.length}}async findGreaterThanDate(t){const n=w(t).startOf("day").utcOffset(O).valueOf(),r=(await this.db.getCollection(this.#t).toArray()).filter(s=>{const e=s.createdAt?.date;return e&&e>=n&&(s.status===void 0||s.status!=="CANCELED")}),a={};return r.forEach(s=>{const e=w(s.createdAt.date+(s.createdAt.offset||0)).utc().format("YYYY-MM-DD");a[e]||(a[e]=0),a[e]+=s.billAmount||0}),Object.entries(a).map(([s,e])=>({createdAt:s,billAmount:e})).sort((s,e)=>s.createdAt-e.createdAt)}async findTopSalesItems(t){const n=w(t).startOf("day").utcOffset(O).valueOf(),r=(await this.db.getCollection(this.#t).toArray()).filter(s=>{const e=s.createdAt?.date;return e&&e>=n&&(s.status===void 0||s.status!=="CANCELED")}),a={};return r.forEach(s=>{s.items?.forEach(e=>{a[e.name]||(a[e.name]=0),a[e.name]+=Number(e.units)||0})}),Object.entries(a).map(([s,e])=>({name:s,sales:e})).sort((s,e)=>e.sales-s.sales).slice(0,10)}async deleteById(t){return this.db.delete(this.#t,t)}}const C=new k(p),Y=l=>async(t,n,c)=>{try{t(A(!0));const r=await p.saveBilling(l,c);if(r&&l.items&&Array.isArray(l.items)){for(const a of l.items)if(a._id&&a.units)try{await t(T(a._id,a.units))}catch(i){console.error(`Failed to update stock for item ${a.name||a.code}:`,i)}}t(g(!!r))}catch(r){console.error("Error saving billing:",r),t(g(!1))}finally{t(A(!1))}},j=l=>async(t,n,c)=>{t(A(!0));try{const r=await E();if(r){const{status:a}=await c.post("/billings/bulk",l);t(g(a===201))}await C.saveBulk(l),r||t(g(!0))}catch(r){console.error("Error saving billing bulk:",r),t(g(!1))}finally{t(A(!1))}};let m=new Map;const M=l=>JSON.stringify(l),I=()=>{m.clear()},K=({page:l=1,fromDate:t=null,toDate:n=null,status:c=null,code:r=null,useCache:a=!0}={})=>async(i,s,e)=>{i(b(!0));try{const u={page:l};t&&(u.fromDate=t),n&&(u.toDate=n),c&&(u.status=c),r&&(u.code=r);const f=M(u);if(await E()){if(a&&m.has(f)){i(h(m.get(f))),i(b(!1));return}const B=new URLSearchParams(u).toString(),{data:v,status:d}=await e.get(`/billings?${B}`);if(d===200){const o=Array.isArray(v)?v:[];if(i(h(o)),a&&(m.set(f,v),m.size>20)){const y=m.keys().next().value;m.delete(y)}}}else{const B=await C.findWithFilters({page:l,fromDate:t,toDate:n,status:c,code:r});B&&i(h(B))}}catch(u){console.error("Error fetching billings:",u)}finally{i(b(!1))}},P=(l,t)=>async(n,c,r)=>{n(A(!0));try{if(await E()){const{data:i,status:s}=await r.patch(`/billings/${l}/status`,{status:t});if(s===200){const u=c().billing.billings.map(f=>f._id===l?{...f,status:t}:f);return n(h(u)),n(g(!!i._id)),i}}else{const s=c().billing.billings.map(e=>e._id===l?{...e,status:t}:e);n(h(s)),n(g(!0))}}catch(a){return console.error("Error updating billing status:",a),n(g(!1)),null}finally{n(A(!1))}};export{Y as a,I as c,K as g,j as s,P as u};
