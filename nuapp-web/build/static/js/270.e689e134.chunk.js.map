{"version":3,"file":"static/js/270.e689e134.chunk.js","mappings":"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","sources":["components/shared/ConfirmDialog.js","constants.js","hooks/useDidUpdate.js","modules/billing/services/item-categories.service.js","modules/billing/views/items/ItemForm.js","modules/billing/views/items/Items.js","modules/shared/services/notification.service.js","utils/index.js"],"sourcesContent":["import React, { forwardRef, useImperativeHandle, useState } from 'react'\nimport { CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react'\nimport { PropTypes } from 'prop-types'\n\nconst ConfirmDialog = forwardRef(function ConfirmDialog({ message, onResponse }, ref) {\n  const [visible, setVisible] = useState(false)\n\n  const handleResponse = (response) => {\n    onResponse && onResponse(response)\n  }\n\n  useImperativeHandle(\n    ref,\n    () => {\n      return {\n        show(toggle) {\n          setVisible(toggle)\n        },\n      }\n    },\n    [],\n  )\n\n  return (\n    <>\n      <CModal visible={visible} onClose={() => setVisible(false)}>\n        <CModalHeader onClose={() => setVisible(false)}>\n          <CModalTitle>Confirmación</CModalTitle>\n        </CModalHeader>\n        <CModalBody>{message}</CModalBody>\n        <CModalFooter>\n          <CButton\n            style={{ width: 50 }}\n            variant=\"outline\"\n            color=\"secondary\"\n            onClick={() => handleResponse(true)}\n          >\n            SI\n          </CButton>\n          <CButton style={{ width: 50 }} color=\"primary\" onClick={() => handleResponse(false)}>\n            NO\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  )\n})\n\nConfirmDialog.propTypes = {\n  show: PropTypes.bool,\n  message: PropTypes.string,\n  onResponse: PropTypes.func,\n}\n\nexport default ConfirmDialog\n","const CONSTANTS = {\n  ENTER_KEYCODE: 13,\n  TAB_KEYCODE: 9,\n  AVAILABLE_BILLS: [2000, 5000, 10000, 20000, 50000, 100000],\n}\n\nexport default CONSTANTS\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useRef } from 'react'\n\nexport const useDidUpdate = (callback, dependecies) => {\n  const mounted = useRef(false)\n\n  useEffect(() => {\n    if (mounted.current) {\n      return callback()\n    } else {\n      mounted.current = true\n    }\n  }, dependecies)\n}\n","import {\n  saveSuccess,\n  setItemCategories,\n  setCodeRegistered,\n} from '../reducers/item-categories.reducer'\n\nexport const saveItemCategory = (billing) => async (dispatch, _, api) => {\n  const { status } = await api.post('/item-categories', billing)\n  if (status === 201) {\n    dispatch(saveSuccess(true))\n    dispatch(getItemCategories({ page: 1 }))\n  } else {\n    dispatch(saveSuccess(false))\n  }\n}\n\nexport const updateItemCategory = (itemCategory) => async (dispatch, _, api) => {\n  const itemCategoryToUpdate = { ...itemCategory }\n  const id = itemCategoryToUpdate._id\n  delete itemCategoryToUpdate._id\n  const { status } = await api.put(`/item-categories/${id}`, itemCategoryToUpdate)\n  if (status === 201) {\n    dispatch(saveSuccess(true))\n    dispatch(getItemCategories({ page: 1 }))\n  } else {\n    dispatch(saveSuccess(false))\n  }\n}\n\nexport const getItemCategories = (params) => async (dispatch, _, api) => {\n  const searchParams = new URLSearchParams(params).toString()\n  const { data, status } = await api.get(\n    `/item-categories${searchParams.length > 0 ? '?' + searchParams : ''}`,\n  )\n  if (status === 200) dispatch(setItemCategories(data))\n}\n\nexport const validateCodeRegistered = (code) => async (dispatch, _, api) => {\n  if (!code) return\n  const { data, status } = await api.get(`/item-categories/code/${code}`)\n  if (status === 200) dispatch(setCodeRegistered(data))\n}\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect, createRef, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport {\n  CButton,\n  CRow,\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalFooter,\n  CContainer,\n  CCol,\n  CFormInput,\n  CForm,\n  CFormSelect,\n  CCardBody,\n  CCardHeader,\n  CCard,\n  CCardFooter,\n} from '@coreui/react'\nimport Quagga from 'quagga'\nimport { getItemCategories } from 'src/modules/billing/services/item-categories.service'\nimport { existByCode } from '../../services/items.service'\nimport ConfirmDialog from 'src/components/shared/ConfirmDialog'\n\nconst itemInitialState = {\n  name: '',\n  code: '',\n  description: '',\n  price: '',\n  categoryId: '',\n  units: 0,\n  measurementUnit: '',\n}\n\nfunction ItemForm(props) {\n  const dispatch = useDispatch()\n  const itemCategories = useSelector((state) => state.itemCategories.itemCategories)\n  const codeRegistered = useSelector((state) => state.items.existsByCode)\n  const [item, setItem] = useState(itemInitialState)\n  const [failedValidations, setFailedValidations] = useState({\n    code: false,\n    description: false,\n    name: false,\n    price: false,\n    categoryId: false,\n    measurementUnit: false,\n  })\n  const [modal, setModal] = useState(false)\n  const confirmDialogRef = useRef()\n  const oldCode = props.item?.code\n\n  useEffect(() => {\n    props.item && setItem(props.item)\n    dispatch(getItemCategories({ parse: true }))\n  }, [dispatch, props.item])\n\n  const toggle = () => setModal(!modal)\n  const validateCodeExistence = (code) => {\n    if (props.item && oldCode !== code) {\n      dispatch(existByCode(code))\n    }\n  }\n\n  const onChangeField = ({ target: { name, value } }) => {\n    setItem({\n      ...item,\n      [name]: value,\n    })\n    setFailedValidations({ ...failedValidations, [name]: !value })\n    if (name === 'code') validateCodeExistence(value)\n  }\n\n  const clearFieldsForm = () => {\n    setItem(itemInitialState)\n  }\n\n  const scanItem = () => {\n    toggle()\n    setTimeout(() => {\n      Quagga.init(\n        {\n          inputStream: {\n            name: 'Live',\n            type: 'LiveStream',\n            constraints: {\n              width: 320,\n              height: 380,\n              facingMode: 'environment',\n            },\n            target: document.querySelector('#reader'), // Or '#yourElement' (optional)\n          },\n          decoder: {\n            readers: [\n              {\n                format: 'ean_reader',\n                config: {\n                  supplements: ['ean_13_reader'],\n                },\n              },\n            ],\n          },\n        },\n        function (err) {\n          if (err) {\n            console.log(err)\n            return\n          }\n          console.log('Ready to start')\n          Quagga.start()\n        },\n      )\n      Quagga.onDetected(({ codeResult: { code } }) => {\n        console.log({ code })\n        setItem({\n          ...item,\n          code,\n        })\n        setModal(false)\n        Quagga.stop()\n      })\n      Quagga.onProcessed((result) => {\n        const drawingCanvas = Quagga.canvas.dom.overlay\n        drawingCanvas.style.display = 'none'\n      })\n    }, 300)\n  }\n\n  const closeBtn = (\n    <button className=\"close\" onClick={toggle}>\n      &times;\n    </button>\n  )\n\n  const isValidForm = () => {\n    const { name, code, description, price, categoryId, measurementUnit } = {\n      ...item,\n    }\n    const failedValidationsObj = { ...failedValidations }\n    failedValidationsObj.code = !code || codeRegistered\n    failedValidationsObj.description = !description\n    failedValidationsObj.name = !name\n    failedValidationsObj.price = !price\n    failedValidationsObj.categoryId = !categoryId\n    failedValidationsObj.measurementUnit = !measurementUnit\n    setFailedValidations(failedValidationsObj)\n    return Object.values(failedValidationsObj).every((validation) => validation === false)\n  }\n\n  const save = async () => {\n    if (isValidForm()) {\n      props.onSave({\n        ...item,\n      })\n      clearFieldsForm()\n    }\n  }\n\n  const cancel = () => {\n    confirmDialogRef.current.show(true)\n  }\n\n  const handleResponseCancel = (sureCancel) => {\n    sureCancel && props.onCancel()\n    if (!sureCancel) {\n      confirmDialogRef.current.show(false)\n      clearFieldsForm()\n    }\n  }\n\n  return (\n    <>\n      <CContainer fluid>\n        <CCard>\n          <CCardHeader>{props.item ? 'EDITANDO' : 'CREANDO'} ITEM</CCardHeader>\n          <CCardBody>\n            <CForm className=\"mt-2 row g-3 needs-validation\" noValidate>\n              <CRow style={{ marginTop: '40px' }}>\n                <CCol xs=\"12\" lg=\"4\">\n                  <CFormInput\n                    label=\"Código\"\n                    type=\"text\"\n                    name=\"code\"\n                    value={item.code}\n                    feedback={\n                      codeRegistered ? 'El código ya se encuentra registrado' : 'Campo obligatorio'\n                    }\n                    invalid={codeRegistered || failedValidations.code}\n                    required\n                    onChange={(event) => onChangeField(event)}\n                  />\n                </CCol>\n                <CCol xs=\"12\" lg=\"4\">\n                  <CFormInput\n                    label=\"Nombre\"\n                    type=\"text\"\n                    name=\"name\"\n                    value={item.name}\n                    feedbackInvalid=\"Campo obligatorio\"\n                    invalid={failedValidations.name}\n                    required\n                    onChange={(event) => onChangeField(event)}\n                  />\n                </CCol>\n                <CCol xs=\"12\" lg=\"4\">\n                  <CFormInput\n                    label=\"Descripción\"\n                    type=\"text\"\n                    name=\"description\"\n                    value={item.description}\n                    feedbackInvalid=\"Campo obligatorio\"\n                    invalid={failedValidations.description}\n                    required\n                    onChange={(event) => onChangeField(event)}\n                  />\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol xs=\"12\" lg=\"4\">\n                  <CFormInput\n                    label=\"Precio\"\n                    type=\"number\"\n                    name=\"price\"\n                    value={item.price}\n                    feedbackInvalid=\"Campo obligatorio\"\n                    invalid={failedValidations.price}\n                    required\n                    onChange={(event) => onChangeField(event)}\n                  />\n                </CCol>\n                <CCol xs=\"12\" lg=\"4\">\n                  <CFormSelect\n                    label=\"Categoria\"\n                    name=\"categoryId\"\n                    value={item.categoryId}\n                    required\n                    feedbackInvalid=\"Campo obligatorio\"\n                    invalid={failedValidations.categoryId}\n                    onChange={(event) => onChangeField(event)}\n                    aria-label=\"Default select example\"\n                    options={['Seleccione la categoria', ...itemCategories]}\n                  />\n                </CCol>\n                <CCol xs=\"12\" lg=\"4\">\n                  <CFormInput\n                    label=\"Unidad de medida\"\n                    type=\"text\"\n                    name=\"measurementUnit\"\n                    value={item.measurementUnit}\n                    feedbackInvalid=\"Campo obligatorio\"\n                    invalid={failedValidations.measurementUnit}\n                    required\n                    onChange={(event) => onChangeField(event)}\n                  />\n                </CCol>\n              </CRow>\n            </CForm>\n          </CCardBody>\n          <CCardFooter className=\"mt-2\">\n            <CRow className=\"mt-0\">\n              <CCol className=\"text-center\" xs=\"8\" lg={{ offset: 4, span: 4 }}>\n                <CButton color=\"success\" type=\"button\" onClick={() => save()}>\n                  {props.item ? 'EDITAR' : 'GUARDAR'}\n                </CButton>\n                &nbsp; &nbsp;\n                <CButton variant=\"outline\" color=\"secondary\" onClick={() => cancel()}>\n                  CANCELAR\n                </CButton>\n              </CCol>\n            </CRow>\n          </CCardFooter>\n        </CCard>\n      </CContainer>\n      <ConfirmDialog\n        ref={confirmDialogRef}\n        onResponse={handleResponseCancel}\n        message=\"¿Estás seguro que quieres cancelar?\"\n      ></ConfirmDialog>\n      <CModal isOpen={modal} toggle={toggle}>\n        <CModalHeader toggle={toggle} close={closeBtn}>\n          Escaneando\n        </CModalHeader>\n        <CModalBody>\n          <div id=\"reader\" width=\"600px\" style={{ maxWidth: '750px' }}></div>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={toggle}>\n            Cancelar\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  )\n}\n\nexport default ItemForm\n\nItemForm.propTypes = {\n  onCancel: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n  item: PropTypes.object,\n}\n","import React, { useState, useEffect } from 'react'\n\nimport {\n  CCard,\n  CCardHeader,\n  CCardFooter,\n  CContainer,\n  CRow,\n  CButton,\n  CCardBody,\n  CCol,\n  CCardImage,\n  CTable,\n  CTableBody,\n  CTableRow,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CInputGroup,\n  CFormInput,\n  CCardTitle,\n} from '@coreui/react'\nimport ItemForm from './ItemForm'\nimport DefaultImg from './../../../../assets/images/new.ico'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getItems, saveItem, updateItem } from 'src/modules/billing/services/items.service'\nimport CONSTANTS from 'src/constants'\nimport { formatCurrency } from 'src/utils'\nimport { useDidUpdate } from 'src/hooks/useDidUpdate'\nimport { sendToast } from '../../../shared/services/notification.service'\nimport { Helmet } from 'react-helmet'\n\nconst { ENTER_KEYCODE, TAB_KEYCODE } = CONSTANTS\n\nfunction Item() {\n  const dispatch = useDispatch()\n  const items = useSelector((state) => state.items.items)\n  const saveSuccess = useSelector((state) => state.items.saveSuccess)\n  const [searchTerm, setSearchTerm] = useState('')\n  let [editing, setEditing] = useState(false)\n  let [item, setItem] = useState(null)\n  let [page, setPage] = useState(1)\n\n  useEffect(() => {\n    setSearchTerm('')\n    dispatch(getItems({ page: 1 }))\n  }, [dispatch])\n\n  useDidUpdate(() => {\n    sendToast(dispatch, { message: 'Guardado exitosamente!' })\n    setItem(null)\n    setEditing(false)\n  }, [saveSuccess])\n\n  const save = (item) => {\n    if (item._id) {\n      dispatch(updateItem(item))\n      return\n    }\n    dispatch(saveItem(item))\n  }\n\n  const cancel = async () => {\n    dispatch(getItems({ page: 1 }))\n    setEditing(false)\n  }\n\n  const handlePrevPage = async () => {\n    const newPage = page === 1 ? 1 : page - 1\n    setPage(newPage)\n    dispatch(getItems({ page: newPage }))\n  }\n\n  const handleNextPage = async () => {\n    const newPage = page + 1\n    setPage(newPage)\n    dispatch(getItems({ page: newPage }))\n  }\n\n  const onChangeField = ({ target: { value } }) => {\n    setSearchTerm(value)\n  }\n\n  const onKeyDownCodeField = async ({ keyCode }) => {\n    if ([ENTER_KEYCODE, TAB_KEYCODE].includes(keyCode)) search()\n  }\n\n  const search = async () => {\n    if (!!searchTerm) {\n      dispatch(getItems({ code: searchTerm.trim(), name: searchTerm.trim(), page: 1 }))\n      return\n    }\n    dispatch(getItems({ page: 1 }))\n  }\n\n  const handleEdit = (item) => {\n    setEditing(true)\n    setItem(item)\n  }\n\n  const handleNewItem = () => {\n    setItem(null)\n    setEditing(true)\n  }\n\n  const handleClear = () => {\n    setSearchTerm('')\n    dispatch(getItems({ page: 1 }))\n  }\n\n  return (\n    <>\n      <CContainer className=\"mt--6\" fluid>\n        <CRow>\n          <CCol>\n            <CCard className=\"mt-6 shadow border-10\">\n              <CCardHeader>\n                <Helmet>\n                  <title>ITEMS</title>\n                </Helmet>\n                <CCardTitle>ITEMS</CCardTitle>\n              </CCardHeader>\n              <CCardBody>\n                {!editing && (\n                  <CRow>\n                    <CCol xs=\"4\" lg=\"3\">\n                      <CButton variant=\"outline\" color=\"success\" onClick={handleNewItem}>\n                        NUEVO ITEM\n                      </CButton>\n                    </CCol>\n                    <CCol lg=\"5\">\n                      <CInputGroup>\n                        <CFormInput\n                          type=\"text\"\n                          name=\"searchTerm\"\n                          placeholder=\"...\"\n                          value={searchTerm}\n                          onChange={(event) => onChangeField(event)}\n                          onKeyDown={(event) => onKeyDownCodeField(event)}\n                        />\n                        <CButton type=\"button\" variant=\"outline\" color=\"primary\" onClick={search}>\n                          BUSCAR\n                        </CButton>\n                        <CButton\n                          variant=\"outline\"\n                          type=\"button\"\n                          color=\"secondary\"\n                          onClick={handleClear}\n                        >\n                          BORRAR\n                        </CButton>\n                      </CInputGroup>\n                    </CCol>\n                  </CRow>\n                )}\n                {!editing && (\n                  <>\n                    <div className=\"d-lg-none\">\n                      {items.map(({ name, code, description, price }) => (\n                        <CCard\n                          key={code}\n                          style={{\n                            width: 'auto',\n                          }}\n                        >\n                          <CRow className=\"g-0\" key={code}>\n                            <CCol xs={4}>\n                              <CCardImage src={DefaultImg} />\n                            </CCol>\n                            <CCol xs={8}>\n                              <CCardBody>\n                                <CRow>\n                                  <CCol>{name}</CCol>\n                                </CRow>\n                                <CRow>\n                                  <CCol>{code}</CCol>\n                                </CRow>\n                                <CRow>\n                                  <CCol>{description}</CCol>\n                                </CRow>\n                                <CRow>\n                                  <CCol>${price}</CCol>\n                                </CRow>\n                              </CCardBody>\n                            </CCol>\n                          </CRow>\n                        </CCard>\n                      ))}\n                    </div>\n                    <div className=\"d-none d-lg-block\">\n                      <CTable>\n                        <CTableHead>\n                          <CTableRow>\n                            <CTableHeaderCell>Nombre</CTableHeaderCell>\n                            <CTableHeaderCell>Código</CTableHeaderCell>\n                            <CTableHeaderCell>Descripción</CTableHeaderCell>\n                            <CTableHeaderCell>Precio</CTableHeaderCell>\n                            <CTableHeaderCell>&nbsp;</CTableHeaderCell>\n                          </CTableRow>\n                        </CTableHead>\n                        <CTableBody>\n                          {items.map((item) => (\n                            <CTableRow key={item.code}>\n                              <CTableDataCell xs=\"12\" className=\"text-uppercase\">\n                                {item.name}\n                              </CTableDataCell>\n                              <CTableDataCell className=\"fs-6\" xs=\"12\">\n                                {item.code}\n                              </CTableDataCell>\n                              <CTableDataCell xs=\"12\" className=\"text-break\">\n                                {item.description}\n                              </CTableDataCell>\n                              <CTableDataCell xs=\"12\">{formatCurrency(item.price)}</CTableDataCell>\n                              <CTableDataCell xs=\"12\">\n                                <CButton\n                                  size=\"sm\"\n                                  variant=\"outline\"\n                                  color=\"info\"\n                                  onClick={() => handleEdit(item)}\n                                >\n                                  Editar\n                                </CButton>\n                              </CTableDataCell>\n                            </CTableRow>\n                          ))}\n                        </CTableBody>\n                      </CTable>\n                    </div>\n\n                    <CCardFooter className=\"py-4\">\n                      <CRow>\n                        <CCol>\n                          <div className=\"d-grid col-12 mx-auto\">\n                            <CButton\n                              type=\"button\"\n                              variant=\"outline\"\n                              color=\"secondary\"\n                              onClick={handlePrevPage}\n                            >\n                              ANTERIOR\n                            </CButton>\n                          </div>\n                        </CCol>\n                        <CCol>\n                          <div className=\"d-grid col-12 mx-auto\">\n                            <CButton\n                              type=\"button\"\n                              variant=\"outline\"\n                              color=\"secondary\"\n                              onClick={handleNextPage}\n                            >\n                              SIGUIENTE\n                            </CButton>\n                          </div>\n                        </CCol>\n                      </CRow>\n                    </CCardFooter>\n                  </>\n                )}\n                {editing && <ItemForm item={item} onSave={save} onCancel={cancel} />}\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  )\n}\n\nexport default Item\n","import { setShowToast, setToastConfig } from 'src/app.slice'\n\nexport const sendToast = (dispatch, { message, color = 'success', delay = 2000 }) => {\n  if (!message) console.error('Toast notification must have a message')\n  dispatch(\n    setToastConfig({\n      message,\n      color,\n      delay,\n    }),\n  )\n  dispatch(setShowToast(true))\n}\n","import dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\ndayjs.extend(utc)\n\nexport const formatCurrency = (amount) => {\n  return Number.isInteger(amount) && amount >= 0\n    ? new Intl.NumberFormat('es-CO', {\n        style: 'currency',\n        currency: 'COP',\n        maximumFractionDigits: 0,\n      }).format(amount)\n    : amount\n}\n\nexport const formatDate = (dateObject, format = 'DD-MM-YYYY hh:mm a') => {\n  if (typeof dateObject === 'string') {\n    return dayjs(dateObject).utcOffset(-300).format(format)\n  }\n  const { date, offset } = dateObject || {}\n  if (!date || !offset) return ''\n  return dayjs(date)\n    .utcOffset(offset / 60000)\n    .format(format)\n}\n"],"names":["ConfirmDialog","forwardRef","ref","message","onResponse","useState","visible","setVisible","handleResponse","response","useImperativeHandle","show","toggle","onClose","style","width","variant","color","onClick","ENTER_KEYCODE","TAB_KEYCODE","AVAILABLE_BILLS","useDidUpdate","callback","dependecies","mounted","useRef","useEffect","current","saveItemCategory","billing","dispatch","_","api","post","status","saveSuccess","getItemCategories","page","updateItemCategory","itemCategory","itemCategoryToUpdate","id","_id","put","params","searchParams","URLSearchParams","toString","get","length","data","setItemCategories","validateCodeRegistered","code","setCodeRegistered","itemInitialState","name","description","price","categoryId","units","measurementUnit","props","useDispatch","itemCategories","useSelector","state","codeRegistered","items","existsByCode","item","setItem","failedValidations","setFailedValidations","modal","setModal","confirmDialogRef","oldCode","parse","onChangeField","target","value","existByCode","clearFieldsForm","closeBtn","className","isValidForm","failedValidationsObj","Object","values","every","validation","save","onSave","fluid","noValidate","marginTop","xs","lg","label","type","feedback","invalid","required","onChange","event","feedbackInvalid","options","offset","span","sureCancel","onCancel","isOpen","close","maxWidth","CONSTANTS","searchTerm","setSearchTerm","editing","setEditing","setPage","getItems","sendToast","cancel","handlePrevPage","newPage","handleNextPage","onKeyDownCodeField","keyCode","includes","search","trim","Helmet","placeholder","onKeyDown","map","src","DefaultImg","formatCurrency","size","handleEdit","updateItem","saveItem","delay","console","error","setToastConfig","setShowToast","dayjs","utc","amount","Number","isInteger","Intl","NumberFormat","currency","maximumFractionDigits","format","formatDate","dateObject","utcOffset","date"],"sourceRoot":""}