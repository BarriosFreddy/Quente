{"version":3,"file":"static/js/901.0f835a54.chunk.js","mappings":"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","sources":["modules/billing/services/billings.service.js","modules/core/views/dashboard/Dashboard.js","utils/index.js"],"sourcesContent":["import { setSaveSuccess, setBillings, saveBillingLocally } from '../reducers/billings.reducer'\nimport isOnline from 'is-online'\nlet isonline = false\n\nexport const saveBilling = (billing) => async (dispatch, getState, api) => {\n  isonline = await isOnline()\n  const { status } = isonline\n    ? await api.post('/billings', billing)\n    : saveLocally(dispatch, getState(), billing)\n  status === 201 ? dispatch(setSaveSuccess(true)) : dispatch(setSaveSuccess(false))\n}\n\nexport const getBillings =\n  ({ page = 1 } = {}) =>\n  async (dispatch, getState, api) => {\n    isonline = await isOnline()\n    const { data, status } = isonline\n      ? await api.get(`/billings?page=${page}`)\n      : getLocally(dispatch, getState())\n    if (status === 200) dispatch(setBillings(data))\n  }\n\nexport const getBillingsGTDate = (date) => async (dispatch, _, api) => {\n  const { data, status } = await api.get(`/billings/per/${date}`)\n  if (status === 200) dispatch(setBillings(data))\n}\n\nfunction saveLocally(dispatch, state, billing) {\n  const { billings } = state.billing.offline\n  let billingsArray = []\n  if (Array.isArray(billings)) {\n    const arr = JSON.parse(JSON.stringify(billings))\n    billingsArray = [...billingsArray, ...arr]\n  }\n  billingsArray.unshift(billing)\n  dispatch(saveBillingLocally(billingsArray))\n  return { status: 201 }\n}\n\nfunction getLocally(dispatch, state) {\n  const billings = [state.billing.offline.billings]\n  if (billings.length > 10) billings.length = 10\n  dispatch(setBillings(billings))\n  return { data: billings, status: 200 }\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport {\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cibTwitter,\n  cilCloudDownload,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\nimport dayjs from 'dayjs'\nimport { getBillingsGTDate } from '../../../billing/services/billings.service'\nimport { formatCurrency } from 'src/utils'\n\nconst progressExample = [\n  { title: 'Visits', value: '29.703 Users', percent: 40, color: 'success' },\n  { title: 'Unique', value: '24.093 Users', percent: 20, color: 'info' },\n  { title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning' },\n  { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\n  { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },\n]\n\nconst progressGroupExample1 = [\n  { title: 'Monday', value1: 34, value2: 78 },\n  { title: 'Tuesday', value1: 56, value2: 94 },\n  { title: 'Wednesday', value1: 12, value2: 67 },\n  { title: 'Thursday', value1: 43, value2: 91 },\n  { title: 'Friday', value1: 22, value2: 73 },\n  { title: 'Saturday', value1: 53, value2: 82 },\n  { title: 'Sunday', value1: 9, value2: 69 },\n]\n\nconst progressGroupExample2 = [\n  { title: 'Male', icon: cilUser, value: 53 },\n  { title: 'Female', icon: cilUserFemale, value: 43 },\n]\n\nconst progressGroupExample3 = [\n  { title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235' },\n  { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },\n  { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },\n  { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },\n]\n\nconst Dashboard = () => {\n  const dispatch = useDispatch()\n  const billings = useSelector((state) => state.billing.billings)\n  const tenDaysBefore = dayjs().subtract(10, 'days').format('YYYY-MM-DD')\n  useEffect(() => {\n    dispatch(getBillingsGTDate(tenDaysBefore))\n  }, [dispatch, tenDaysBefore])\n\n  const labels = billings ? billings.map(({ createdAt }) => createdAt) : []\n  const data = billings ? billings.map(({ billAmount }) => billAmount) : []\n  const dataReversed = [...billings].reverse()\n  return (\n    <>\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Ventas por día\n              </h4>\n              {/* <div className=\"small text-medium-emphasis\">January - July 2021</div> */}\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Day', 'Month', 'Year'].map((value) => (\n                  <CButton\n                    color=\"outline-secondary\"\n                    key={value}\n                    className=\"mx-0\"\n                    active={value === 'Day'}\n                  >\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <CChartLine\n            style={{ height: '300px', marginTop: '40px' }}\n            data={{\n              labels,\n              datasets: [\n                {\n                  label: 'Daily sales',\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                  borderColor: getStyle('--cui-info'),\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\n                  borderWidth: 2,\n                  data,\n                  fill: true,\n                },\n              ],\n            }}\n            options={{\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false,\n                },\n              },\n              scales: {\n                x: {\n                  grid: {\n                    drawOnChartArea: false,\n                  },\n                },\n                y: {\n                  ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(250 / 5),\n                    max: 250,\n                  },\n                },\n              },\n              elements: {\n                line: {\n                  tension: 0.4,\n                },\n                point: {\n                  radius: 1,\n                  hitRadius: 10,\n                  hoverRadius: 4,\n                  hoverBorderWidth: 3,\n                },\n              },\n            }}\n          />\n          <br />\n\n          <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n            <CTableHead color=\"light\">\n              <CTableRow>\n                <CTableHeaderCell className=\"text-center\">Día</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Ventas</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {dataReversed.map(({ createdAt, billAmount }, index) => (\n                <CTableRow key={index}>\n                  <CTableDataCell className=\"text-center\">{createdAt}</CTableDataCell>\n                  <CTableDataCell className=\"text-center\">\n                    {formatCurrency(billAmount)}\n                  </CTableDataCell>\n                </CTableRow>\n              ))}\n            </CTableBody>\n          </CTable>\n        </CCardBody>\n        <CCardFooter>\n          <CRow xs={{ cols: 1 }} md={{ cols: 5 }} className=\"text-center\">\n            {progressExample.map((item, index) => (\n              <CCol className=\"mb-sm-2 mb-0\" key={index}>\n                <div className=\"text-medium-emphasis\">{item.title}</div>\n                <strong>\n                  {item.value} ({item.percent}%)\n                </strong>\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\n              </CCol>\n            ))}\n          </CRow>\n        </CCardFooter>\n      </CCard>\n\n      <CRow>\n        <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Traffic {' & '} Sales</CCardHeader>\n            <CCardBody>\n              <CRow>\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                        <div className=\"text-medium-emphasis small\">New Clients</div>\n                        <div className=\"fs-5 fw-semibold\">9,123</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Recurring Clients</div>\n                        <div className=\"fs-5 fw-semibold\">22,643</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n                  {progressGroupExample1.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-prepend\">\n                        <span className=\"text-medium-emphasis small\">{item.title}</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"info\" value={item.value1} />\n                        <CProgress thin color=\"danger\" value={item.value2} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Pageviews</div>\n                        <div className=\"fs-5 fw-semibold\">78,623</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Organic</div>\n                        <div className=\"fs-5 fw-semibold\">49,123</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n\n                  {progressGroupExample2.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">{item.value}%</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"warning\" value={item.value} />\n                      </div>\n                    </div>\n                  ))}\n\n                  <div className=\"mb-5\"></div>\n\n                  {progressGroupExample3.map((item, index) => (\n                    <div className=\"progress-group\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">\n                          {item.value}{' '}\n                          <span className=\"text-medium-emphasis small\">({item.percent}%)</span>\n                        </span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"success\" value={item.percent} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Dashboard\n","import dayjs from 'dayjs'\n\nexport const formatCurrency = (amount) => {\n  return Number.isInteger(amount) && amount >= 0\n    ? new Intl.NumberFormat('es-CO', {\n        style: 'currency',\n        currency: 'COP',\n        maximumFractionDigits: 0,\n      }).format(amount)\n    : amount\n}\n\nexport const formatDate = (dateAsString, format = 'DD-MM-YYYY hh:mm a') => {\n  return dayjs(dateAsString).format(format)\n}\n"],"names":["saveBilling","billing","dispatch","getState","api","isOnline","post","saveLocally","status","setSaveSuccess","getBillings","page","get","getLocally","data","setBillings","getBillingsGTDate","date","_","state","billings","offline","billingsArray","Array","isArray","arr","JSON","parse","stringify","unshift","saveBillingLocally","length","progressExample","title","value","percent","color","progressGroupExample1","value1","value2","progressGroupExample2","icon","cilUser","cilUserFemale","progressGroupExample3","cibGoogle","cibFacebook","cibTwitter","cibLinkedin","useDispatch","useSelector","tenDaysBefore","dayjs","subtract","format","useEffect","labels","map","createdAt","billAmount","dataReversed","reverse","className","sm","id","cilCloudDownload","active","style","height","marginTop","datasets","label","backgroundColor","hexToRgba","getStyle","borderColor","pointHoverBackgroundColor","borderWidth","fill","options","maintainAspectRatio","plugins","legend","display","scales","x","grid","drawOnChartArea","y","ticks","beginAtZero","maxTicksLimit","stepSize","Math","ceil","max","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","align","hover","responsive","index","formatCurrency","xs","cols","md","item","thin","xl","size","amount","Number","isInteger","Intl","NumberFormat","currency","maximumFractionDigits","formatDate","dateAsString"],"sourceRoot":""}