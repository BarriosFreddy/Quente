{"version":3,"file":"static/js/775.f2033eb3.chunk.js","mappings":"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","sources":["hooks/useDidUpdate.js","modules/billing/services/billings.service.js","modules/core/views/synchronizer/Synchronizer.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useRef } from 'react'\n\nexport const useDidUpdate = (callback, dependecies) => {\n  const mounted = useRef(false)\n\n  useEffect(() => {\n    if (mounted.current) {\n      callback()\n    } else {\n      mounted.current = true\n    }\n  }, dependecies)\n}\n","import {\n  setSaveSuccess,\n  setBillings,\n  saveBillingLocally,\n  setLoading,\n} from '../reducers/billings.reducer'\nimport isOnline from 'is-online'\nlet isonline = false\n\nexport const saveBilling = (billing) => async (dispatch, getState, api) => {\n  isonline = await isOnline()\n  dispatch(setLoading(true))\n  const { status } = isonline\n    ? await api.post('/billings', billing)\n    : saveLocally(dispatch, getState(), billing)\n  status === 201 ? dispatch(setSaveSuccess(true)) : dispatch(setSaveSuccess(false))\n  dispatch(setLoading(false))\n}\n\nexport const saveBillingBulk = (billings) => async (dispatch, getState, api) => {\n  isonline = await isOnline()\n  dispatch(setLoading(true))\n  const { status } = await api.post('/billings/bulk', billings)\n  status === 201 ? dispatch(setSaveSuccess(true)) : dispatch(setSaveSuccess(false))\n  dispatch(setLoading(false))\n}\n\nexport const getBillings =\n  ({ page = 1 } = {}) =>\n  async (dispatch, getState, api) => {\n    isonline = await isOnline()\n    const { data, status } = isonline\n      ? await api.get(`/billings?page=${page}`)\n      : getLocally(dispatch, getState())\n    if (status === 200) dispatch(setBillings(data))\n  }\n\nexport const getBillingsGTDate = (date) => async (dispatch, _, api) => {\n  const { data, status } = await api.get(`/billings/per/${date}`)\n  if (status === 200) dispatch(setBillings(data))\n}\n\nfunction saveLocally(dispatch, state, billing) {\n  const { billings } = state.billing.offline\n  let billingsArray = []\n  if (Array.isArray(billings)) {\n    const arr = JSON.parse(JSON.stringify(billings))\n    billingsArray = [...billingsArray, ...arr]\n  }\n  billingsArray.unshift(billing)\n  dispatch(saveBillingLocally(billingsArray))\n  return { status: 201 }\n}\n\nfunction getLocally(dispatch, state) {\n  const billings = [state.billing.offline.billings]\n  if (billings.length > 10) billings.length = 10\n  dispatch(setBillings(billings))\n  return { data: billings, status: 200 }\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardTitle,\n  CCol,\n  CContainer,\n  CRow,\n} from '@coreui/react'\nimport { Helmet } from 'react-helmet'\nimport { saveBillingBulk } from 'src/modules/billing/services/billings.service'\nimport { saveBillingLocally } from 'src/modules/billing/reducers/billings.reducer'\nimport { useDidUpdate } from 'src/hooks/useDidUpdate'\n\nfunction Billing() {\n  const billingsOffiline = useSelector((state) => state.billing.offline.billings)\n  const loading = useSelector((state) => state.billing.loading)\n  const dispatch = useDispatch()\n  console.log({ billingsOffiline })\n  useDidUpdate(() => {\n    dispatch(saveBillingLocally([]))\n  }, [loading])\n\n  const handleSynchronize = () => {\n    dispatch(saveBillingBulk(billingsOffiline))\n  }\n\n  return (\n    <>\n      <CContainer className=\"mt--6\" fluid>\n        <Helmet>\n          <title>Sync</title>\n        </Helmet>\n        <CCard>\n          <CCardHeader>\n            <CCardTitle>Sincronizador</CCardTitle>\n          </CCardHeader>\n          <CCardBody>\n            <CRow>\n              <CCol className=\"text-uppercase\">Facturas sin sincronizar</CCol>\n              <CCol>{billingsOffiline && billingsOffiline.length}</CCol>\n              <CCol>\n                <CButton role=\"button\" onClick={handleSynchronize} disabled={loading}>\n                  Sincronizar\n                </CButton>\n              </CCol>\n            </CRow>\n          </CCardBody>\n        </CCard>\n      </CContainer>\n    </>\n  )\n}\n\nexport default Billing\n"],"names":["useDidUpdate","callback","dependecies","mounted","useRef","useEffect","current","isonline","saveBilling","billing","dispatch","getState","api","isOnline","setLoading","post","saveLocally","status","setSaveSuccess","saveBillingBulk","billings","getBillings","page","get","getLocally","data","setBillings","getBillingsGTDate","date","_","state","offline","billingsArray","Array","isArray","arr","JSON","parse","stringify","unshift","saveBillingLocally","length","billingsOffiline","useSelector","loading","useDispatch","console","log","className","fluid","role","onClick","disabled"],"sourceRoot":""}