{"version":3,"file":"static/js/468.9591247b.chunk.js","mappings":"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","sources":["constants.js","modules/billing/services/item-categories.service.js","modules/billing/views/item-categories/ItemCategoriesForm.js","modules/billing/views/item-categories/ItemCategories.js"],"sourcesContent":["const CONSTANTS = {\n  ENTER_KEYCODE: 13,\n  TAB_KEYCODE: 9,\n  AVAILABLE_BILLS: [2000, 5000, 10000, 20000, 50000, 100000],\n}\n\nexport default CONSTANTS\n","import { saveSuccess, setItemCategories } from '../reducers/item-categories.reducer'\n\nexport const saveItemCategory = (billing) => async (dispatch, _, api) => {\n  const { status } = await api.post('/item-categories', billing)\n  status === 200 ? dispatch(saveSuccess(true)) : dispatch(saveSuccess(false))\n}\n\nexport const getItemCategories = (params) => async (dispatch, _, api) => {\n  const searchParams = new URLSearchParams(params).toString()\n  const { data, status } = await api.get(\n    `/item-categories${searchParams.length > 0 ? '?' + searchParams : ''}`,\n  )\n  if (status === 200) dispatch(setItemCategories(data))\n}\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { CButton, CRow, CContainer, CCol, CFormInput, CForm } from '@coreui/react'\nimport { useDispatch } from 'react-redux'\nimport { saveItemCategory } from 'src/modules/billing/services/item-categories.service'\n\nconst categoryInitialState = {\n  code: '',\n  name: '',\n  description: '',\n}\n\nfunction ItemCategoriesForm(props) {\n  const dispatch = useDispatch()\n\n  const [itemCategory, setItemCategory] = useState(categoryInitialState)\n  const [failedValidations, setFailedValidations] = useState({\n    code: false,\n    description: false,\n    name: false,\n  })\n\n  const onChangeField = ({ target: { name, value } }) => {\n    setItemCategory({\n      ...itemCategory,\n      [name]: value,\n    })\n    setFailedValidations({ ...failedValidations, [name]: !value })\n  }\n\n  const clearFieldsForm = () => {\n    setItemCategory(categoryInitialState)\n  }\n\n  const isValidForm = () => {\n    const { code, name, description } = {\n      ...itemCategory,\n    }\n    const failedValidationsObj = { ...failedValidations }\n    failedValidationsObj.code = !code\n    failedValidationsObj.name = !name\n    failedValidationsObj.description = !description\n    setFailedValidations(failedValidationsObj)\n    return Object.values(failedValidationsObj).every((validation) => validation === false)\n  }\n\n  const save = async () => {\n    if (isValidForm()) {\n      dispatch(\n        saveItemCategory({\n          ...itemCategory,\n        }),\n      )\n      props.cancel()\n      clearFieldsForm()\n    }\n  }\n\n  const cancel = () => {\n    props.cancel()\n  }\n\n  return (\n    <>\n      <CContainer fluid>\n        <CForm className=\"row g-3 needs-validation\" noValidate>\n          <CRow style={{ marginTop: '40px' }}>\n            <CCol xs=\"12\" lg=\"3\">\n              <CFormInput\n                label=\"Código\"\n                type=\"text\"\n                name=\"code\"\n                value={itemCategory.code}\n                feedbackInvalid=\"Campo obligatorio\"\n                invalid={failedValidations.code}\n                required\n                onChange={(event) => onChangeField(event)}\n              />\n            </CCol>\n            <CCol xs=\"12\" lg=\"3\">\n              <CFormInput\n                label=\"Nombre\"\n                type=\"text\"\n                name=\"name\"\n                value={itemCategory.name}\n                feedbackInvalid=\"Campo obligatorio\"\n                invalid={failedValidations.name}\n                required\n                onChange={(event) => onChangeField(event)}\n              />\n            </CCol>\n            <CCol xs=\"12\" lg=\"3\">\n              <CFormInput\n                label=\"Descripción\"\n                type=\"text\"\n                name=\"description\"\n                value={itemCategory.description}\n                feedbackInvalid=\"Campo obligatorio\"\n                invalid={failedValidations.description}\n                required\n                onChange={(event) => onChangeField(event)}\n              />\n            </CCol>\n          </CRow>\n          <div style={{ margin: '20px' }} />\n          <CRow>\n            <CCol xs=\"8\" lg=\"1\">\n              <CButton size=\"sm\" color=\"success\" type=\"button\" onClick={() => save()}>\n                GUARDAR\n              </CButton>\n            </CCol>\n            <CCol xs=\"4\" lg=\"1\">\n              <CButton size=\"sm\" color=\"light\" onClick={() => cancel()}>\n                CANCELAR\n              </CButton>\n            </CCol>\n          </CRow>\n        </CForm>\n      </CContainer>\n    </>\n  )\n}\n\nexport default ItemCategoriesForm\n\nItemCategoriesForm.propTypes = {\n  cancel: PropTypes.func.isRequired,\n}\n","import React, { useState, useEffect } from 'react'\n\nimport {\n  CCard,\n  CCardHeader,\n  CCardFooter,\n  CContainer,\n  CRow,\n  CButton,\n  CCardBody,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n  CInputGroup,\n  CFormInput,\n} from '@coreui/react'\nimport ItemCategoriesForm from './ItemCategoriesForm'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getItemCategories } from 'src/modules/billing/services/item-categories.service'\nimport CONSTANTS from 'src/constants'\n\nconst { ENTER_KEYCODE, TAB_KEYCODE } = CONSTANTS\n\nfunction Categories() {\n  const dispatch = useDispatch()\n  const itemCategories = useSelector((state) => state.itemCategories.itemCategories)\n  const [searchTerm, setSearchTerm] = useState('')\n  let [editing, setEditing] = useState(false)\n  let [page, setPage] = useState(1)\n\n  useEffect(() => {\n    dispatch(getItemCategories())\n  }, [dispatch])\n\n  const cancel = async () => {\n    dispatch(getItemCategories())\n    setEditing(false)\n  }\n\n  const handleNextPage = async () => {\n    const newPage = page + 1\n    setPage(newPage)\n    dispatch(getItemCategories({ page: newPage }))\n  }\n\n  const handlePrevPage = async () => {\n    const newPage = page === 1 ? 1 : page - 1\n    setPage(newPage)\n    dispatch(getItemCategories({ page: newPage }))\n  }\n\n  const onChangeField = ({ target: { value } }) => {\n    setSearchTerm(value)\n  }\n\n  const onKeyDownCodeField = async ({ keyCode }) => {\n    if ([ENTER_KEYCODE, TAB_KEYCODE].includes(keyCode)) search()\n  }\n\n  const search = async () => {\n    if (!!searchTerm) {\n      dispatch(getItemCategories({ code: searchTerm.trim(), name: searchTerm.trim(), page: 1 }))\n      return\n    }\n    dispatch(getItemCategories({ page: 1 }))\n  }\n\n  return (\n    <>\n      <CContainer className=\"mt-6\" fluid>\n        <CRow>\n          <CCol>\n            <CCard className=\"mt-6 shadow border-10\">\n              {!editing && (\n                <CCardHeader className=\"border-0\">\n                  <CRow>\n                    <CCol xs=\"4\" lg=\"3\">\n                      <CButton variant=\"outline\" color=\"success\" onClick={() => setEditing(true)}>\n                        NUEVA CATEGORIA\n                      </CButton>\n                    </CCol>\n                    <CCol lg=\"5\">\n                      <CInputGroup>\n                        <CFormInput\n                          type=\"text\"\n                          name=\"searchTerm\"\n                          placeholder=\"...\"\n                          value={searchTerm}\n                          onChange={(event) => onChangeField(event)}\n                          onKeyDown={(event) => onKeyDownCodeField(event)}\n                        />\n                        <CButton type=\"button\" variant=\"outline\" color=\"primary\" onClick={search}>\n                          BUSCAR\n                        </CButton>\n                      </CInputGroup>\n                    </CCol>\n                  </CRow>\n                </CCardHeader>\n              )}\n              <CCardBody>\n                {!editing && (\n                  <>\n                    <div className=\"d-lg-none\">\n                      {itemCategories &&\n                        itemCategories.map(({ _id, code, name, description }) => (\n                          <CCard\n                            key={_id}\n                            style={{\n                              width: 'auto',\n                            }}\n                          >\n                            <CRow className=\"g-0\">\n                              <CCol xs={12}>\n                                <CCardBody>\n                                  <CRow>\n                                    <CCol>{code}</CCol>\n                                  </CRow>\n                                  <CRow>\n                                    <CCol>{name}</CCol>\n                                  </CRow>\n                                  <CRow>\n                                    <CCol>{description}</CCol>\n                                  </CRow>\n                                </CCardBody>\n                              </CCol>\n                            </CRow>\n                          </CCard>\n                        ))}\n                    </div>\n                    <div className=\"d-none d-lg-block\">\n                      <CTable>\n                        <CTableHead>\n                          <CTableRow>\n                            <CTableHeaderCell>Código</CTableHeaderCell>\n                            <CTableHeaderCell>Nombre</CTableHeaderCell>\n                            <CTableHeaderCell>Descripción</CTableHeaderCell>\n                          </CTableRow>\n                        </CTableHead>\n                        <CTableBody>\n                          {itemCategories &&\n                            itemCategories.map(({ _id, code, name, description }) => (\n                              <CTableRow key={_id}>\n                                <CTableDataCell xs=\"12\" className=\"text-uppercase\">\n                                  {code}\n                                </CTableDataCell>\n                                <CTableDataCell className=\"fs-6\" xs=\"12\">\n                                  {name}\n                                </CTableDataCell>\n                                <CTableDataCell xs=\"12\" className=\"text-break\">\n                                  {description}\n                                </CTableDataCell>\n                              </CTableRow>\n                            ))}\n                        </CTableBody>\n                      </CTable>\n                    </div>\n\n                    <CCardFooter className=\"py-4\">\n                      <CRow>\n                        <CCol>\n                          <div className=\"d-grid col-12 mx-auto\">\n                            <CButton\n                              type=\"button\"\n                              variant=\"outline\"\n                              color=\"secondary\"\n                              onClick={handlePrevPage}\n                            >\n                              ANTERIOR\n                            </CButton>\n                          </div>\n                        </CCol>\n                        <CCol>\n                          <div className=\"d-grid col-12 mx-auto\">\n                            <CButton\n                              type=\"button\"\n                              variant=\"outline\"\n                              color=\"secondary\"\n                              onClick={handleNextPage}\n                            >\n                              SIGUIENTE\n                            </CButton>\n                          </div>\n                        </CCol>\n                      </CRow>\n                    </CCardFooter>\n                  </>\n                )}\n                {editing && <ItemCategoriesForm cancel={cancel} />}\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  )\n}\n\nexport default Categories\n"],"names":["ENTER_KEYCODE","TAB_KEYCODE","AVAILABLE_BILLS","saveItemCategory","billing","dispatch","_","api","post","status","saveSuccess","getItemCategories","params","searchParams","URLSearchParams","toString","get","length","data","setItemCategories","categoryInitialState","code","name","description","props","useDispatch","useState","itemCategory","setItemCategory","failedValidations","setFailedValidations","onChangeField","target","value","isValidForm","failedValidationsObj","Object","values","every","validation","save","cancel","fluid","className","noValidate","style","marginTop","xs","lg","label","type","feedbackInvalid","invalid","required","onChange","event","margin","size","color","onClick","CONSTANTS","itemCategories","useSelector","state","searchTerm","setSearchTerm","editing","setEditing","page","setPage","useEffect","handleNextPage","newPage","handlePrevPage","onKeyDownCodeField","keyCode","includes","search","trim","variant","placeholder","onKeyDown","map","_id","width"],"sourceRoot":""}