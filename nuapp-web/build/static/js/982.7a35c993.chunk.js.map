{"version":3,"file":"static/js/982.7a35c993.chunk.js","mappings":"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","sources":["constants.js","modules/billing/services/billings.service.js","modules/billing/views/BillingForm.js","../node_modules/@coreui/icons/js/free/cil-trash.js","modules/billing/views/Payment.js","modules/billing/views/Billing.js","utils/index.js"],"sourcesContent":["const CONSTANTS = {\n  ENTER_KEYCODE: 13,\n  TAB_KEYCODE: 9,\n  AVAILABLE_BILLS: [2000, 5000, 10000, 20000, 50000, 100000],\n}\n\nexport default CONSTANTS\n","import { setSaveSuccess, setBillings, saveBillingLocally } from '../reducers/billings.reducer'\nimport isOnline from 'is-online'\nlet isonline = false\n\nexport const saveBilling = (billing) => async (dispatch, getState, api) => {\n  isonline = await isOnline()\n  const { status } = isonline\n    ? await api.post('/billings', billing)\n    : saveLocally(dispatch, getState(), billing)\n  status === 201 ? dispatch(setSaveSuccess(true)) : dispatch(setSaveSuccess(false))\n}\n\nexport const getBillings =\n  ({ page = 1 } = {}) =>\n  async (dispatch, getState, api) => {\n    isonline = await isOnline()\n    const { data, status } = isonline\n      ? await api.get(`/billings?page=${page}`)\n      : getLocally(dispatch, getState())\n    if (status === 200) dispatch(setBillings(data))\n  }\n\nexport const getBillingsGTDate = (date) => async (dispatch, _, api) => {\n  const { data, status } = await api.get(`/billings/per/${date}`)\n  if (status === 200) dispatch(setBillings(data))\n}\n\nfunction saveLocally(dispatch, state, billing) {\n  const { billings } = state.billing.offline\n  let billingsArray = []\n  if (Array.isArray(billings)) {\n    const arr = JSON.parse(JSON.stringify(billings))\n    billingsArray = [...billingsArray, ...arr]\n  }\n  billingsArray.unshift(billing)\n  dispatch(saveBillingLocally(billingsArray))\n  return { status: 201 }\n}\n\nfunction getLocally(dispatch, state) {\n  const billings = [state.billing.offline.billings]\n  if (billings.length > 10) billings.length = 10\n  dispatch(setBillings(billings))\n  return { data: billings, status: 200 }\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport Quagga from 'quagga'\nimport { PropTypes } from 'prop-types'\n\nimport {\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n  CCol,\n  CContainer,\n  CButton,\n  CFormInput,\n  CInputGroup,\n  CTable,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n} from '@coreui/react'\nimport { formatCurrency } from 'src/utils'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setItems } from 'src/modules/billing/reducers/items.reducer'\nimport { getItems } from 'src/modules/billing/services/items.service'\nimport CONSTANTS from './../../../constants'\n\nconst { ENTER_KEYCODE, TAB_KEYCODE } = CONSTANTS\n\nconst BillingForm = (props) => {\n  const dispatch = useDispatch()\n  const items = useSelector((state) => state.items.items)\n  const [searchTerm, setSearchTerm] = useState('')\n  const [modal, setModal] = useState(false)\n  const toggle = () => setModal(!modal)\n  const searchTermInput = useRef()\n\n  const clear = useCallback(() => {\n    dispatch(setItems([]))\n    setSearchTerm('')\n    searchTermInput.current.focus()\n  }, [dispatch])\n\n  useEffect(() => {\n    clear()\n  }, [clear])\n\n  const onChangeField = ({ target: { value } }) => {\n    setSearchTerm(value)\n    search(value)\n  }\n\n  const onKeyDownCodeField = async ({ keyCode }) => {\n    if ([ENTER_KEYCODE, TAB_KEYCODE].includes(keyCode)) {\n      search()\n      setTimeout(() => {\n        if (items.length > 0) addItem(items[0])\n      }, 500)\n    }\n  }\n\n  const search = async (term) => {\n    const termToSearch = term ?? searchTerm\n    if (!!termToSearch) {\n      dispatch(getItems({ code: termToSearch, name: termToSearch, page: 1 }))\n    }\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  // eslint-disable-next-line no-unused-vars\n  const scanItem = () => {\n    toggle()\n    setTimeout(() => {\n      Quagga.init(\n        {\n          inputStream: {\n            name: 'Live',\n            type: 'LiveStream',\n            constraints: {\n              width: 320,\n              height: 380,\n              facingMode: 'environment',\n            },\n            target: document.querySelector('#reader'), // Or '#yourElement' (optional)\n          },\n          decoder: {\n            readers: [\n              'ean_reader',\n              /* {\n                format: 'ean_reader',\n                config: {\n                  supplements: ['ean_13_reader'],\n                }, \n              }, */\n              'code_128_reader',\n            ],\n          },\n        },\n        function (err) {\n          if (err) {\n            console.log(err)\n            return\n          }\n          console.log('Ready to start')\n          Quagga.start()\n        },\n      )\n      Quagga.onDetected(({ codeResult: { code } }) => {\n        console.log({ code })\n        setModal(false)\n        Quagga.stop()\n      })\n      Quagga.onProcessed((result) => {\n        /* const drawingCanvas = Quagga.canvas.dom.overlay\n        drawingCanvas.style.display = 'none' */\n      })\n    }, 300)\n  }\n\n  const addItem = (item) => {\n    props.addItem(item)\n    clear()\n  }\n\n  return (\n    <>\n      <CContainer fluid>\n        <CRow>\n          <CCol>\n            <CInputGroup>\n              <CFormInput\n                ref={searchTermInput}\n                type=\"text\"\n                name=\"searchTerm\"\n                placeholder=\"Buscar\"\n                value={searchTerm}\n                onChange={(event) => onChangeField(event)}\n                onKeyDown={(event) => onKeyDownCodeField(event)}\n              />\n              <CButton variant=\"outline\" type=\"button\" color=\"secondary\" onClick={clear}>\n                BORRAR\n              </CButton>\n            </CInputGroup>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol>\n            <CTable hover>\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell>Nombre</CTableHeaderCell>\n                  <CTableHeaderCell>Precio</CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {items.map((item) => (\n                  <CTableRow\n                    key={item.code}\n                    onClick={() => addItem(item)}\n                    style={{ cursor: 'pointer' }}\n                  >\n                    <CTableDataCell xs=\"12\">\n                      <CRow>\n                        <CCol className=\"text-uppercase\">{item.name}</CCol>\n                      </CRow>\n                      <CRow>\n                        <CCol style={{ fontSize: 10 }}>{item.code}</CCol>\n                      </CRow>\n                    </CTableDataCell>\n                    <CTableDataCell className=\"text-break\">\n                      {formatCurrency(item.price)}\n                    </CTableDataCell>\n                  </CTableRow>\n                ))}\n              </CTableBody>\n            </CTable>\n          </CCol>\n        </CRow>\n      </CContainer>\n      <CModal visible={modal} onClose={() => setModal(false)}>\n        <CModalHeader>\n          <CModalTitle>Scanning</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div id=\"reader\" width=\"600px\" style={{ maxWidth: '750px' }}></div>\n        </CModalBody>\n        <CModalFooter>\n          <CButton Ccolor=\"secondary\" onClick={() => setModal(false)}>\n            Close\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  )\n}\n\nexport default BillingForm\n\nBillingForm.propTypes = {\n  addItem: PropTypes.func.isRequired,\n}\n","export const cilTrash = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M96,472a23.82,23.82,0,0,0,23.579,24H392.421A23.82,23.82,0,0,0,416,472V152H96Zm32-288H384V464H128Z' class='ci-primary'/><rect width='32' height='200' x='168' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='240' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='312' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M328,88V40c0-13.458-9.488-24-21.6-24H205.6C193.488,16,184,26.542,184,40V88H64v32H448V88ZM216,48h80V88H216Z' class='ci-primary'/>\"]","import React, { useState } from 'react'\nimport { PropTypes } from 'prop-types'\n\nimport { CRow, CCol, CContainer, CFormInput, CCard, CCardBody } from '@coreui/react'\nimport { formatCurrency } from './../../../utils'\nimport CONSTANTS from './../../../constants'\n\nconst { ENTER_KEYCODE, TAB_KEYCODE } = CONSTANTS\n\nconst PaymentComp = (props) => {\n  const [receivedAmount, setReceivedAmount] = useState(0)\n  const [receivedAmountInvalid, setReceivedAmountInvalid] = useState(false)\n  const [changeAmount, setChangeAmount] = useState(0)\n\n  const onChangeField = ({ target: { value } }) => {\n    setReceivedAmount(value)\n    props.setReceivedAmount(value)\n    calculateAmountChange(value)\n  }\n\n  const handleReceivedAmount = (amount) => {\n    setReceivedAmount(amount)\n    props.setReceivedAmount(amount)\n    calculateAmountChange(amount)\n  }\n\n  const onKeyDownCodeField = async ({ keyCode }) => {\n    if ([ENTER_KEYCODE, TAB_KEYCODE].includes(keyCode)) calculateAmountChange()\n  }\n\n  const calculateAmountChange = (received) => {\n    const receivedMoney = received ?? receivedAmount\n    setReceivedAmountInvalid(receivedMoney < props.total)\n    setChangeAmount(receivedMoney - props.total)\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  const clear = () => {\n    setReceivedAmount(0)\n    setChangeAmount(0)\n  }\n\n  return (\n    <>\n      <CContainer fluid>\n        <CRow>\n          {CONSTANTS.AVAILABLE_BILLS.map((amount) => (\n            <CCol lg=\"6\" key={amount} className=\"mt-2\" style={{ cursor: 'pointer' }}>\n              <CCard onClick={() => handleReceivedAmount(amount)}>\n                <CCardBody>\n                  <h4 className=\"text-center\">{formatCurrency(amount)}</h4>\n                </CCardBody>\n              </CCard>\n            </CCol>\n          ))}\n        </CRow>\n        <CRow className=\"mt-4\">\n          <CCol lg=\"4\">\n            <h5>RECIBIDO</h5>\n          </CCol>\n          <CCol lg=\"8\">\n            <CFormInput\n              data-testid=\"receivedAmountId\"\n              type=\"number\"\n              size=\"lg\"\n              name=\"receivedAmount\"\n              feedbackInvalid=\"El monto recibido no debe ser menor al total\"\n              invalid={receivedAmountInvalid}\n              value={receivedAmount}\n              onChange={(event) => onChangeField(event)}\n              onKeyDown={(event) => onKeyDownCodeField(event)}\n            />\n          </CCol>\n        </CRow>\n        <CRow className=\"mt-4\">\n          <CCol lg=\"4\">\n            <h5>CAMBIO</h5>\n          </CCol>\n          <CCol lg=\"8\" className=\"align-self-end\">\n            <span className=\"fs-3\">{formatCurrency(changeAmount)}</span>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </>\n  )\n}\n\nexport default PaymentComp\n\nPaymentComp.propTypes = {\n  total: PropTypes.number,\n  setReceivedAmount: PropTypes.func,\n}\n","import React, { useState, useEffect, useCallback, useRef, createRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CFormInput,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport BillingForm from './BillingForm'\nimport { formatCurrency } from 'src/utils'\nimport CIcon from '@coreui/icons-react'\nimport { cilTrash } from '@coreui/icons'\nimport PaymentComp from './Payment'\nimport { saveBilling } from '../../../modules/billing/services/billings.service'\nimport { setShowToast, setSidebarUnfoldable, setToastConfig } from 'src/app.slice'\nimport { setSaveSuccess } from '../reducers/billings.reducer'\n\nfunction Billing() {\n  const saveSuccess = useSelector((state) => state.billing.saveSuccess)\n\n  const dispatch = useDispatch()\n  let [items, setItems] = useState([])\n  let [receivedAmount, setReceivedAmount] = useState(0)\n  let [total, setTotal] = useState(0)\n  let [itemUnits, setItemUnits] = useState({})\n  let [paying, setPaying] = useState(false)\n  const isReceivedLTTotal = receivedAmount < total\n  const hasNotItems = items.length <= 0\n\n  useEffect(() => {\n    dispatch(setSidebarUnfoldable(true))\n  }, [dispatch])\n\n  const clear = useCallback(() => {\n    setItems([])\n    setReceivedAmount(0)\n    setTotal(0)\n    setItemUnits({})\n    dispatch(\n      setToastConfig({\n        message: 'Guardado exitoso!',\n        color: 'success',\n        delay: 2000,\n      }),\n    )\n    dispatch(setShowToast(true))\n    dispatch(setSaveSuccess(false))\n  }, [dispatch])\n\n  useEffect(() => {\n    if (saveSuccess) clear()\n  }, [saveSuccess, clear])\n\n  const addItem = async (item) => {\n    let itemUnitsAdded = {}\n    isAdded(item.code)\n      ? (itemUnitsAdded[item.code] = itemUnits[item.code] + 1)\n      : (itemUnitsAdded[item.code] = 1)\n    itemUnitsAdded = { ...itemUnits, ...itemUnitsAdded }\n    setItemUnits(itemUnitsAdded)\n    const itemsAdded = [...items]\n    if (!isAdded(item.code)) itemsAdded.unshift(item)\n    setItems(itemsAdded)\n    calculateTotal(itemsAdded, itemUnitsAdded)\n  }\n\n  const isAdded = (itemCode) => items.some(({ code }) => code === itemCode)\n\n  const calculateTotal = (itemsAdded, itemUnitsAdded) => {\n    const totalAmount = itemsAdded\n      .map(({ price, code }) => price * itemUnitsAdded[code])\n      .reduce((acc, value) => +acc + +value, 0)\n    setTotal(totalAmount)\n  }\n\n  const deleteItem = (code) => {\n    const itemsArray = Object.assign([], items)\n    const itemUnitsAddedArray = Object.assign([], itemUnits)\n    const itemIndex = itemsArray.findIndex((item) => item.code === code)\n    delete itemUnitsAddedArray[code]\n    if (itemIndex !== -1) itemsArray.splice(itemIndex, 1)\n    setItems(itemsArray)\n    setItemUnits(itemUnitsAddedArray)\n    calculateTotal(itemsArray, itemUnitsAddedArray)\n  }\n\n  const onChangeField = ({ target: { name, value } }) => {\n    const itemUnitsAdded = { ...itemUnits, [name]: value }\n    setItemUnits(itemUnitsAdded)\n    calculateTotal(items, itemUnitsAdded)\n  }\n\n  const handleCharge = () => {\n    setPaying(true)\n  }\n\n  const handleSave = async () => {\n    if (isReceivedLTTotal) {\n      dispatch(\n        setToastConfig({\n          message: 'Revisa el monto recibido y el total',\n          color: 'warning',\n        }),\n      )\n      dispatch(setShowToast(true))\n      return\n    }\n    if (hasNotItems) {\n      dispatch(\n        setToastConfig({\n          message: 'No hay productos por facturar',\n          color: 'warning',\n        }),\n      )\n      dispatch(setShowToast(true))\n      return\n    }\n    dispatch(\n      saveBilling({\n        receivedAmount,\n        billAmount: total,\n        items: getItemsData(items),\n      }),\n    )\n    setPaying(false)\n  }\n\n  const getItemsData = () =>\n    items.map(({ _id, name, code, price, units, measurementUnit }) => ({\n      _id,\n      name,\n      code,\n      price,\n      units,\n      measurementUnit,\n    }))\n\n  const hanndleReceivedAmount = (receivedAmount) => setReceivedAmount(receivedAmount)\n  return (\n    <>\n      <CContainer className=\"mt--6\" fluid>\n        <CRow>\n          <CCol lg=\"5\">\n            <CCard className=\"shadow border-10\" style={{ height: '78vh' }}>\n              <CCardBody style={{ overflow: 'auto' }}>\n                <CTable hover>\n                  <CTableHead>\n                    <CTableRow>\n                      <CTableHeaderCell>Producto</CTableHeaderCell>\n                      <CTableHeaderCell>Cantidad</CTableHeaderCell>\n                      <CTableHeaderCell>Subtotal</CTableHeaderCell>\n                      <CTableHeaderCell>&nbsp;</CTableHeaderCell>\n                    </CTableRow>\n                  </CTableHead>\n                  <CTableBody>\n                    {items.map(({ code, name, price }) => (\n                      <CTableRow key={code}>\n                        <CTableDataCell xs=\"12\">\n                          <CRow>\n                            <CCol className=\"text-uppercase\">{name}</CCol>\n                          </CRow>\n                          <CRow>\n                            <CCol style={{ fontSize: 10 }}>{code}</CCol>\n                          </CRow>\n                        </CTableDataCell>\n                        <CTableDataCell colSpan={1}>\n                          <CFormInput\n                            style={{ maxWidth: 60 }}\n                            type=\"number\"\n                            min={1}\n                            formNoValidate\n                            size=\"sm\"\n                            name={code}\n                            value={itemUnits[code]}\n                            onChange={(event) => onChangeField(event)}\n                          />\n                        </CTableDataCell>\n                        <CTableDataCell xs=\"12\" className=\"text-break\">\n                          {formatCurrency(price * itemUnits[code])}\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <CButton size=\"sm\" color=\"ligth\" onClick={() => deleteItem(code)}>\n                            <CIcon icon={cilTrash} size=\"sm\" />\n                          </CButton>\n                        </CTableDataCell>\n                      </CTableRow>\n                    ))}\n                  </CTableBody>\n                </CTable>\n              </CCardBody>\n            </CCard>\n          </CCol>\n          <CCol lg=\"7\">\n            <CCard className=\"shadow border-10\" style={{ height: '78vh', overflowY: 'auto' }}>\n              <CCardBody>\n                {!paying && <BillingForm addItem={addItem} />}\n                {paying && <PaymentComp setReceivedAmount={hanndleReceivedAmount} total={total} />}\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n        <CRow className=\"mt-3 align-items-end\">\n          <CCard className=\"shadow border-10\">\n            <CCardBody>\n              <CRow className=\"mt-3\">\n                <CCol lg=\"5\">\n                  <div className=\"d-grid gap-2\">\n                    <CButton\n                      size=\"lg\"\n                      color={paying ? 'success' : 'primary'}\n                      onClick={paying ? handleSave : handleCharge}\n                      disabled={paying ? isReceivedLTTotal : hasNotItems}\n                    >\n                      {paying ? 'FACTURAR' : 'COBRAR'}\n                    </CButton>\n                  </div>\n                </CCol>\n                <CCol lg=\"6\" className=\"fs-1\">\n                  <span>POR COBRAR</span>&nbsp;\n                  {formatCurrency(total)}\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        </CRow>\n      </CContainer>\n    </>\n  )\n}\n\nexport default Billing\n","import dayjs from 'dayjs'\n\nexport const formatCurrency = (amount) => {\n  return Number.isInteger(amount) && amount >= 0\n    ? new Intl.NumberFormat('es-CO', {\n        style: 'currency',\n        currency: 'COP',\n        maximumFractionDigits: 0,\n      }).format(amount)\n    : amount\n}\n\nexport const formatDate = (dateAsString, format = 'DD-MM-YYYY hh:mm a') => {\n  return dayjs(dateAsString).format(format)\n}\n"],"names":["ENTER_KEYCODE","TAB_KEYCODE","AVAILABLE_BILLS","saveBilling","billing","dispatch","getState","api","isOnline","post","saveLocally","status","setSaveSuccess","getBillings","page","get","getLocally","data","setBillings","getBillingsGTDate","date","_","state","billings","offline","billingsArray","Array","isArray","arr","JSON","parse","stringify","unshift","saveBillingLocally","length","CONSTANTS","props","useDispatch","items","useSelector","useState","searchTerm","setSearchTerm","modal","setModal","searchTermInput","useRef","clear","useCallback","setItems","current","focus","useEffect","onKeyDownCodeField","keyCode","includes","search","setTimeout","addItem","term","termToSearch","getItems","code","name","item","fluid","ref","type","placeholder","value","onChange","event","target","onChangeField","onKeyDown","variant","color","onClick","hover","map","style","cursor","xs","className","fontSize","formatCurrency","price","visible","onClose","id","width","maxWidth","Ccolor","cilTrash","receivedAmount","setReceivedAmount","receivedAmountInvalid","setReceivedAmountInvalid","changeAmount","setChangeAmount","calculateAmountChange","received","receivedMoney","total","amount","lg","handleReceivedAmount","size","feedbackInvalid","invalid","saveSuccess","setTotal","itemUnits","setItemUnits","paying","setPaying","isReceivedLTTotal","hasNotItems","setSidebarUnfoldable","setToastConfig","message","delay","setShowToast","itemUnitsAdded","isAdded","itemsAdded","calculateTotal","itemCode","some","totalAmount","reduce","acc","handleSave","billAmount","getItemsData","_id","units","measurementUnit","height","overflow","colSpan","min","formNoValidate","itemsArray","Object","assign","itemUnitsAddedArray","itemIndex","findIndex","splice","deleteItem","icon","overflowY","Payment","disabled","Number","isInteger","Intl","NumberFormat","currency","maximumFractionDigits","format","formatDate","dateAsString","dayjs"],"sourceRoot":""}